{"version":3,"file":"src_index_js.3e779b61d3b798174684.js","mappings":"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ACxB,kBAAkB,mBAAO,CAAC,wDAAuB;;AAEjD;;AAEA;AACA;AACA;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB;;;;;;;;;;;AClJlB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mBAAO,CAAC,kEAAQ;AACxB,mBAAO,CAAC,yFAAkC;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzIA,QAAQ,mBAAO,CAAC,kEAAQ;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6BAA6B,gBAAgB;AAC7C,6BAA6B,qBAAqB;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB;;;;;;;;;;;AC9MlB,kBAAkB,mBAAO,CAAC,wDAAuB;;AAEjD;;AAEA;AACA;AACA;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;;;;;;;;;;;AC5IlB,QAAQ,mBAAO,CAAC,kEAAQ;AACxB,QAAQ,mBAAO,CAAC,8EAAY;AAC5B,kBAAkB,mBAAO,CAAC,wDAAuB;;AAEjD;;AAEA;AACA;AACA;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8BAA8B;AACpD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,sBAAsB,gCAAgC;AACtD;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;;;;;;;;;;;AC/XlB,cAAc,mBAAO,CAAC,0GAAuB;AAC7C,QAAQ,mBAAO,CAAC,8EAAY;AAC5B,aAAa,mBAAO,CAAC,6DAAQ;AAC7B,2BAA2B,mBAAO,CAAC,kEAAQ;AAC3C,kBAAkB,mBAAO,CAAC,wDAAuB;AACjD,oBAAoB,mBAAO,CAAC,4DAAyB;AACrD,kBAAkB,mBAAO,CAAC,wDAAuB;AACjD,qBAAqB,mBAAO,CAAC,8DAA0B;AACvD,cAAc,mBAAO,CAAC,kDAAoB;AAC1C;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,gBAAgB,mBAAO,CAAC,uFAAiC;;AAEzD,mBAAO,CAAC,mFAA+B;AACvC,mBAAO,CAAC,qHAAgD;AACxD,mBAAO,CAAC,6HAAoD;AAC5D,mBAAO,CAAC,mIAAuD;AAC/D,mBAAO,CAAC,2FAAmC;AAC3C,mBAAO,CAAC,mFAA+B;AACvC,mBAAO,CAAC,yFAAkC;AAC1C,mBAAO,CAAC,0IAA6C;AACrD,mBAAO,CAAC,4JAAsD;AAC9D,mBAAO,CAAC,8IAA+C;AACvD,mBAAO,CAAC,yFAA0B;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,sBAAsB;AACnD,2BAA2B,oBAAoB;AAC/C,yBAAyB,cAAc;AACvC,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL;AACA,aAAa;AACb,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wCAAwC;AACzD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,UAAU,+BAA+B;AACzC;AACA;AACA;AACA,UAAU,6BAA6B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,mBAAmB;AACnB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,mBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,0BAA0B,6BAA6B;AACvD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","sources":["webpack://qgrid2/./src/qgrid.css","webpack://qgrid2/./src/qgrid.css?f9bd","webpack://qgrid2/./src/qgrid.css?d4c7","webpack://qgrid2/./src/index.js","webpack://qgrid2/./src/qgrid.booleanfilter.js","webpack://qgrid2/./src/qgrid.datefilter.js","webpack://qgrid2/./src/qgrid.editors.js","webpack://qgrid2/./src/qgrid.filterbase.js","webpack://qgrid2/./src/qgrid.sliderfilter.js","webpack://qgrid2/./src/qgrid.textfilter.js","webpack://qgrid2/./src/qgrid.widget.js"],"sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"\\n.q-grid-container * {\\n  -webkit-box-sizing: content-box;\\n  -moz-box-sizing: content-box;\\n  box-sizing: content-box;\\n}\\n\\n.q-grid-container {\\n  position: relative;\\n  overflow-x: auto;\\n  width: auto;\\n  height: auto;\\n  border-radius: 4px;\\n}\\n\\n.q-grid-container .hidden {\\n  display: none !important;\\n}\\n\\n.q-grid-container a {\\n  color: #337ab7 !important;\\n  text-decoration: none;\\n  line-height: 20px;\\n}\\n\\n.q-grid-container a:hover,\\n.q-grid-container a:focus {\\n  color: #23527c;\\n  text-decoration: underline;\\n}\\n\\n.q-grid {\\n  position: relative;\\n  border: 1px solid #d3d3d3;\\n  margin-top: 6px;\\n  margin-bottom: 2px;\\n  box-sizing: border-box;\\n}\\n\\n.q-grid-toolbar {\\n  margin: 4px 0\\n}\\n\\n.q-grid-toolbar .btn {\\n  background-color: #EEEEEE;\\n  border-color: #E0E0E0;\\n  margin-right: 6px;\\n  padding: 4px 40px;\\n  /* taken from bootstrap's btn class, since\\n     jupyterlab doesn't include bootstrap css */\\n  display: inline-block;\\n  margin-bottom: 0;\\n  font-weight: normal;\\n  text-align: center;\\n  vertical-align: middle;\\n  touch-action: manipulation;\\n  cursor: pointer;\\n  background-image: none;\\n  border: 1px solid #E0E0E0;\\n  white-space: nowrap;\\n  font-size: 13px;\\n  line-height: 1.42857143;\\n  border-radius: 2px;\\n}\\n\\n.q-grid-toolbar .btn:hover {\\n  background-color: #DDDDDD;\\n  border-color: #CCCCCC;\\n}\\n\\n.q-grid-toolbar .btn:focus {\\n  outline: none;\\n}\\n\\n.q-grid-toolbar .close-modal-btn {\\n  display: none;\\n}\\n\\n.qgrid-modal .q-grid-toolbar .close-modal-btn {\\n  display: block;\\n}\\n\\n.qgrid-modal .full-screen-btn,\\n.qgrid-modal .modal-header,\\n.qgrid-modal .modal-footer {\\n  display: none;\\n}\\n\\n.qgrid-modal {\\n  width: 100%;\\n  height: 100%;\\n  margin: 0px;\\n}\\n\\n.qgrid-modal .modal-dialog {\\n  position: absolute;\\n  top: 20px;\\n  left: 20px;\\n  bottom: 20px;\\n  right: 20px;\\n  margin: 0px;\\n  width: auto;\\n  height: auto;\\n}\\n\\n.qgrid-modal .modal-content {\\n  position: absolute;\\n  left: 0px;\\n  right: 0px;\\n  top: 0px;\\n  bottom: 0px;\\n}\\n\\n.qgrid-modal .modal-body {\\n  position: absolute;\\n  padding: 15px;\\n  top: 0px;\\n  left: 0px;\\n  bottom: 0px;\\n  right: 0px;\\n}\\n\\n.qgrid-modal .modal-body button.close {\\n  margin-top: 7px;\\n  margin-right: 14px;\\n}\\n\\n.qgrid-modal .q-grid-container {\\n  bottom: 25px;\\n  left: 20px;\\n  right: 20px;\\n  position: absolute;\\n  top: 15px;\\n}\\n\\n.qgrid-modal .q-grid {\\n  position: absolute;\\n  top: 33px;\\n  bottom: 0px;\\n  left: 0px;\\n  right: 0px;\\n  height: auto !important;\\n}\\n\\n.q-grid-toolbar .full-screen-btn,\\n.q-grid-toolbar .close-modal-btn {\\n  height: 18px;\\n  width: 12px;\\n  padding: 4px 7px;\\n  float: right;\\n  margin-right: 0px;\\n}\\n\\n.output_scroll .q-grid {\\n  height: 315px !important;\\n}\\n\\n.q-grid-toolbar {\\n  display: none;\\n}\\n\\n.show-toolbar .q-grid-toolbar {\\n  display: block;\\n}\\n\\n.output_scroll .show-toolbar .q-grid {\\n  height: 284px !important;\\n}\\n\\n.q-grid.force-fit-columns .slick-viewport {\\n  overflow-x: hidden !important;\\n}\\n\\n.q-grid.hide-scrollbar > .slick-header {\\n  margin-bottom: -1px;\\n}\\n\\n.q-grid.hide-scrollbar > .slick-viewport {\\n  overflow-y: hidden !important;\\n  height: 100%;\\n}\\n\\n.q-grid.hide-scrollbar.force-fit-columns > .slick-viewport {\\n  overflow: hidden !important;\\n}\\n\\n.q-grid.hide-scrollbar > .slick-viewport > .grid-canvas {\\n  margin-top: 1px;\\n}\\n\\n.q-grid .slick-header {\\n  border-top: none;\\n  border-left: none;\\n  border-right: none;\\n}\\n\\n.q-grid .slick-header-columns,\\n.text-filter-grid .slick-header-columns {\\n  background: none;\\n  background-color: rgb(245, 245, 245);\\n  border-bottom: none;\\n}\\n\\n.q-grid.force-fit-columns .slick-header-column:last-child .filter-button:hover,\\n.q-grid.force-fit-columns .slick-header-column.active:last-child .filter-button,\\n.q-grid.force-fit-columns .slick-header-column:last-child .filter-button.filter-active {\\n  border-right: 1px solid #ccc;\\n  margin-right: -4px;\\n}\\n\\n.q-grid.force-fit-columns .slick-header-column:last-child .filter-button {\\n  margin-right: -4px;\\n  border-right: 1px solid transparent;\\n}\\n\\n.q-qgrid.hide-scrollbar .slick-header-column:last-child .slick-resizable-handle {\\n  right: -4px;\\n}\\n\\n.q-grid.hide-scrollbar > .slick_header .slick-header-column:last-child .filter-button,\\n.q-grid.hide-scrollbar > .slick-header .slick-header-column:last-child .filter-button:hover,\\n.q-grid.hide-scrollbar > .slick-header .slick-header-column.active:last-child .filter-button:hover,\\n.q-grid.hide-scrollbar > .slick-header .slick-header-column.active:last-child .filter-button.filter-active {\\n  border-right: 1px solid transparent;\\n}\\n\\n.q-grid .slick-header-column .filter-button.filter-active,\\n.q-grid .slick-header-column .filter-button.filter-active:hover{\\n  background-color: #deeaf7;\\n  border-left: 1px solid #cccccc;\\n}\\n\\n.q-grid .slick-header-column {\\n  background: rgb(245, 245, 245);\\n  color: #565656;\\n  border-right-style: none;\\n  font-size: 13px;\\n  font-weight: bold;\\n  padding: 6px 2px !important;\\n}\\n\\n.q-grid .slick-header-column.active {\\n  background-color: #deeaf7;\\n}\\n\\n.q-grid .slick-header-column-sorted {\\n  font-style: inherit !important;\\n}\\n\\n.q-grid .slick-header-column:first-child .slick-column-name {\\n  margin-left: 6px !important;\\n}\\n\\n.q-grid .slick-sort-indicator {\\n  height: 8px !important;\\n  margin-left: 6px;\\n}\\n\\n.q-grid .slick-sort-indicator.fa-sort-asc {\\n  margin-top: 4px;\\n  color: #5862ff;\\n}\\n\\n.q-grid .slick-sort-indicator.fa-sort-desc {\\n  margin-top: 1px;\\n  color: #5862ff;\\n}\\n\\n.q-grid .slick-sort-indicator.fa-spinner {\\n  height: auto !important;;\\n  width: auto !important;;\\n  margin-top: 3px;\\n}\\n\\n.q-grid .fa-check {\\n  color: #17a700;\\n}\\n\\n.q-grid .slick-column-name {\\n  margin-bottom: 0px;\\n  float: left;\\n}\\n\\n.q-grid .slick-resizable-handle {\\n  width: 1px;\\n  background-color: #c5c5c5;\\n  border-left: 3px solid rgb(245, 245, 245);\\n  border-right: 3px solid rgb(245, 245, 245);\\n}\\n\\n.q-grid .slick-resizable-handle.active {\\n  border-right-color: #deeaf7;\\n}\\n\\n.q-grid .slick-cell {\\n  border-bottom: 1px solid #e1e8ed;\\n  border-right: none;\\n  border-left: 1px solid transparent;\\n  font-size: 13px;\\n  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\\n  padding-left: 0px;\\n  padding-top: 4px;\\n  border-top: none;\\n}\\n\\n.q-grid.highlight-selected-row .slick-cell.selected {\\n  background-color: #deeaf7;\\n}\\n\\n.q-grid.highlight-selected-cell .slick-cell.active {\\n  border: 2px solid rgb(65, 165, 245);\\n  padding-top: 2px;\\n  padding-bottom: 1px;\\n  padding-left: 3px;\\n}\\n\\n.q-grid .slick-cell.editable:not(.idx-col) {\\n  border: 2px solid rgb(65, 165, 245);\\n  padding-top: 2px;\\n  padding-bottom: 1px;\\n  padding-left: 3px !important;\\n  background-color: #FFF;\\n  -webkit-box-shadow: 0 2px 5px rgba(0,0,0,0.4);\\n  -moz-box-shadow: 0 2px 5px rgba(0,0,0,0.4);\\n  box-shadow: 0 2px 5px rgba(0,0,0,0.4);\\n}\\n\\n.q-grid .slick-cell.editable .editor-select:focus {\\n  outline-style: none;\\n}\\n\\n.q-grid .slick-cell.idx-col {\\n  font-weight: bold;\\n  margin-right: 3px;\\n}\\n\\n.q-grid .slick-cell.idx-col.last-idx-col {\\n  border-right: 1px solid rgb(225, 232, 237);\\n}\\n\\n.q-grid .slick-cell.idx-col:not(.first-idx-col) {\\n  font-weight: bold;\\n  border-left: 1px solid rgb(225, 232, 237);\\n  margin-right: 3px;\\n}\\n\\n.q-grid .idx-col.group-top {\\n  border-bottom-color: transparent;\\n  background-color: #FFF;\\n}\\n\\n.q-grid .idx-col.group-middle {\\n  border-top-color: transparent;\\n  border-bottom-color: transparent;\\n  color: transparent;\\n  background-color: #FFF;\\n}\\n\\n.q-grid .idx-col.group-bottom {\\n  border-top-color: transparent;\\n  color: transparent;\\n  background-color: #FFF;\\n}\\n\\n.q-grid .idx-col.group-single {\\n  background-color: transparent;\\n}\\n\\n.q-grid .slick-cell.l0.r0 {\\n  border-left: none;\\n  padding-left: 6px;\\n  z-index: 85;\\n}\\n\\n.q-grid .slick-cell.l1.r1 {\\n  z-index: 86;\\n}\\n\\n.q-grid .slick-cell.l2.r2 {\\n  z-index: 87;\\n}\\n\\n.q-grid .slick-cell.l3.r3 {\\n  z-index: 88;\\n}\\n\\n.q-grid .slick-cell.l4.r4 {\\n  z-index: 89;\\n}\\n\\n.q-grid .slick-cell.l5.r5 {\\n  z-index: 90;\\n}\\n\\n.q-grid .slick-cell.editable {\\n  z-index: 91 !important;\\n}\\n\\n.q-grid .slick-cell.selected {\\n  background-color: transparent;\\n}\\n\\n/* Filter button */\\n\\n.q-grid .slick-header-column.active .filter-button, .filter-button:hover {\\n  background-color: #deeaf7;\\n  border-left: 1px solid #cccccc;\\n}\\n\\n.q-grid .slick-header-column.filter-button-disabled .filter-button {\\n  color: #bababa;\\n}\\n\\n.q-grid .filter-button {\\n  position: absolute;\\n  right: 4px;\\n  top: 0px;\\n  line-height: 29px;\\n  height: 28px;\\n  width: 21px;\\n  text-align: center;\\n  z-index: 10;\\n  background-image: none;\\n  margin-top: 0px;\\n}\\n\\n.q-grid .filter-button:hover {\\n  background-color: #efefef;\\n  border-left: 1px solid #cccccc;\\n}\\n\\n/* Filter dropdowns */\\n\\n.q-grid-container .grid-filter {\\n  z-index: 1000;\\n  position: absolute;\\n  padding: 0px;\\n  margin: 0px;\\n  max-height: 400px;\\n  display: block;\\n  border-radius: 0px;\\n  /* we previously got these style from bootstrap */\\n  float: left;\\n  min-width: 160px;\\n  list-style: none;\\n  font-size: 13px;\\n  text-align: left;\\n  background-color: #fff;\\n  border: 1px solid rgba(0, 0, 0, 0.15);\\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);\\n  background-clip: padding-box;\\n}\\n\\n.q-grid-container .filter-error-msg {\\n  padding: 8px 14px;\\n  width: 160px;\\n}\\n\\n.q-grid-container .grid-filter h3.qgrid-popover-title {\\n  padding: 5px 30px 5px 11px;\\n  border-bottom: 1px solid #d3d3d3;\\n  border-radius: 0px;\\n  /* we previously got these style from bootstrap */\\n  margin: 0;\\n  font-size: 13px;\\n  background-color: #f7f7f7;\\n  font-family: inherit;\\n  font-weight: 500;\\n  line-height: 1.1;\\n  color: inherit;\\n  display: block;\\n}\\n\\n.q-grid-container .grid-filter .dropdown-title {\\n  font-size: 13px;\\n}\\n\\n.q-grid-container .grid-filter i.close-button {\\n  position: absolute;\\n  right: 11px;\\n  top: 7px;\\n  padding: 0;\\n  color: #ababab;\\n  cursor: pointer;\\n  background-image: none;\\n  margin-top: 0px;\\n}\\n\\n.q-grid-container .grid-filter i.close-button:hover {\\n  color: #777777;\\n}\\n\\n.q-grid-container .grid-filter .dropdown-footer {\\n  background-color: #f7f7f7;\\n  border-top: 1px solid #d3d3d3;\\n  padding: 4px 12px;\\n  height: 19px;\\n}\\n\\n.q-grid-container .grid-filter .dropdown-footer a.reset-link {\\n  padding: 0px;\\n  float: right;\\n}\\n\\n.q-grid-container .grid-filter .dropdown-footer a.select-all-link {\\n  padding: 0px;\\n}\\n\\n.q-grid-container .date-range-filter .dropdown-body {\\n  margin: 15px 11px;\\n  width: 210px;\\n}\\n\\n.q-grid-container .date-range-filter .start-date {\\n  margin-right: 4px;\\n  width: 80px;\\n}\\n\\n.q-grid-container .date-range-filter .end-date {\\n  margin-left: 4px;\\n  width: 80px;\\n}\\n\\n.q-grid-container .numerical-filter .dropdown-body {\\n  margin: 20px 23px 10px 20px;\\n  width: 207px;\\n  text-align: center;\\n}\\n\\n.q-grid-container .numerical-filter .slider-range {\\n  margin-bottom: 4px;\\n}\\n\\n\\n.q-grid-container .numerical-filter .ui-slider-handle {\\n  width: 18px;\\n  padding: 0;\\n}\\n\\n.q-grid-container .numerical-filter .range-separator {\\n  font-size: 28px;\\n  font-weight: 300;\\n  padding: 0 7px;\\n  color: #646a76;\\n  position: relative;\\n  top: 4px;\\n}\\n\\n.text-filter-grid * {\\n  -webkit-box-sizing: border-box;\\n  -moz-box-sizing: border-box;\\n  box-sizing: border-box;\\n}\\n\\n.text-filter .slick-viewport {\\n  overflow-y: auto !important;\\n  overflow-x: hidden !important;\\n}\\n\\n.text-filter .input-area {\\n  padding: 12px;\\n}\\n\\n.text-filter .no-results {\\n  margin-left: 12px;\\n  margin-bottom: 10px;\\n}\\n\\n.text-filter .search-input {\\n  height: 30px;\\n  width: 100%;\\n  margin-bottom: 0px;\\n  box-sizing: border-box;\\n}\\n\\n.text-filter .text-filter-grid {\\n  width: 300px;\\n  height: 250px;\\n  box-sizing: border-box;\\n  border-top: 1px solid #d3d3d3;\\n}\\n\\n.text-filter .slick-header {\\n  border: none;\\n}\\n\\n.text-filter .slick-header-columns {\\n  height: 0px;\\n}\\n\\n.text-filter .slick-cell {\\n  line-height: 30px;\\n  border-left: none;\\n  border-right: none;\\n  background-color: #ffffff !important;\\n  border-bottom: 1px solid #e1e8ed !important;\\n  padding: 0;\\n  text-align: left;\\n  cursor: pointer;\\n}\\n\\n.text-filter .slick-row.odd .slick-cell {\\n  background: #fafafa !important;\\n}\\n\\n.text-filter .slick-row.active .slick-cell {\\n  background-color: #deeaf7 !important;\\n  border-top: 1px solid transparent !important;\\n}\\n\\n.text-filter .check-box-cell {\\n  text-align: center;\\n  line-height: 28px;\\n}\\n\\n.text-filter .check-box-cell input {\\n  margin: 0;\\n}\\n\\n/* from custom-bootstrap *****************/\\n\\n.q-grid-container input.datepicker {\\n  padding: 4px 4px 2px 4px;\\n  border: 1px solid lightgrey;\\n  font-size: 13px;\\n  line-height: 18px;\\n  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\\n}\\n\\n/* jquery-ui overrides */\\n\\n.ui-widget, .ui-widget input, .ui-widget select, .ui-widget textarea, .ui-widget button {\\n  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\\n  font-size: 13px;\\n}\\n\\n.ui-tooltip {\\n  opacity: 1.0 !important;\\n}\\n\\n/* jquery-ui datepicker style overrides */\\n\\n#ui-datepicker-div {\\n  z-index: 9999 !important;\\n}\\n\\n#ui-datepicker-div.ui-datepicker {\\n  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\\n  /*@include box-shadow(0 5px 10px rgba(0, 0, 0, 0.2))*/\\n  z-index: 99 !important;\\n  padding: 0 !important;\\n  background-color: white;\\n  border: 1px solid gray;\\n}\\n\\n#ui-datepicker-div.ui-datepicker .ui-icon {\\n  display: inline-block;\\n  font: normal normal normal 14px/1 FontAwesome;\\n  font-size: inherit;\\n  text-rendering: auto;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  text-indent: 0px;\\n  margin-left: -4px;\\n  margin-top: -6px;\\n  background-image: none;\\n}\\n\\n#ui-datepicker-div.ui-datepicker .ui-icon-circle-triangle-w:before {\\n    content: \\\"\\\\f053\\\";\\n}\\n\\n#ui-datepicker-div.ui-datepicker .ui-icon-circle-triangle-e:before {\\n    content: \\\"\\\\f054\\\";\\n}\\n\\n\\n/* from slickgrid editing example */\\ninput.editor-text {\\n  width: 100%;\\n  height: 100%;\\n  border: 0;\\n  margin: -1px 0 0 0;\\n  background: transparent;\\n  outline: 0;\\n  padding: 0;\\n}\\n\\n.ui-datepicker-trigger {\\n  width: 16px;\\n  height: 16px;\\n  margin-top: 2px;\\n  padding: 0;\\n  vertical-align: top;\\n  left: 4px;\\n  position: relative;\\n}\\n\\n.slick-cell.boolean {\\n  text-align: center;\\n}\\n\\n.bool-radio-wrapper {\\n  width: 150px;\\n  position: relative;\\n  margin: 8px auto 4px auto;\\n}\\n\\n.label-true {\\n  padding: 4px 28px 4px 13px;\\n}\\n\\n.label-false {\\n  padding: 4px 28px 4px 4px;\\n  margin-left: 15px;\\n}\\n\\ninput.bool-filter-radio {\\n  margin-left: -23px;\\n}\\n\\n.slick-cell {\\n  -webkit-touch-callout: none; /* iOS Safari */\\n    -webkit-user-select: none; /* Safari */\\n     -khtml-user-select: none; /* Konqueror HTML */\\n       -moz-user-select: none; /* Firefox */\\n        -ms-user-select: none; /* Internet Explorer/Edge */\\n            user-select: none;\\n}\\n\\n.slick-row .slick-cell:not(:first-child) {\\n  padding-left: 5px;\\n  margin-left: -4px;\\n}\\n\\n.q-grid .slick-sort-indicator-desc,\\n.q-grid .slick-sort-indicator-asc {\\n  background-image: none;\\n}\\n\\n.jupyter-widgets {\\n  overflow: auto !important;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/css-loader/dist/cjs.js!./qgrid.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/style-loader/dist/cjs.js!../node_modules/css-loader/dist/cjs.js!./qgrid.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Entry point for the notebook bundle containing custom model definitions.\n// Export widget models and views, and the npm package version number.\nmodule.exports = require('./qgrid.widget.js');\nmodule.exports.version = require('../package.json').version;\n","var $ = require('jquery');\nvar filter_base = require('./qgrid.filterbase.js');\n\nclass BooleanFilter extends filter_base.FilterBase {\n\n  get_filter_html() {\n    return `\n      <div class='boolean-filter grid-filter qgrid-dropdown-menu'>\n        <h3 class='qgrid-popover-title'>\n          <div class='dropdown-title'>Filter by ${this.field}</div>\n          <i class='fa fa-times icon-remove close-button'/>\n        </h3>\n        <div class='dropdown-body'>\n          <form>\n            <div class=\"bool-radio-wrapper\">\n              <label class=\"radio-label label-true\" for=\"radio-true\">True</label>\n              <input type=\"radio\" name=\"bool-filter-radio\"\n                class=\"bool-filter-radio\" id=\"radio-true\" value=\"true\">\n              <label class=\"radio-label label-false\" for=\"radio-false\">False</label>\n              <input type=\"radio\" name=\"bool-filter-radio\"\n                class=\"bool-filter-radio\" id=\"radio-false\" value=\"false\">\n            </div>\n          </form>\n          <div class='no-results hidden'>No results found.</div>\n        </div>\n        <div class='dropdown-footer'>\n          <a class='reset-link' href='#'>Reset</a>\n        </div>\n      </div>\n    `;\n  }\n\n  update_min_max(col_info, has_active_filter) {\n    this.values = col_info.values;\n    this.length = col_info.length;\n    if('filter_info' in col_info){\n      this.selected = col_info.filter_info.selected;\n    } else {\n      this.selected = null;\n    }\n    this.show_filter();\n  }\n\n  initialize_controls() {\n    super.initialize_controls();\n    this.radio_buttons = this.filter_elem.find('.bool-filter-radio');\n\n    this.filter_elem.find('label').click((e) => {\n      var radio_id = $(e.currentTarget).attr('for');\n      this.radio_buttons.filter(`#${radio_id}`).click();\n    });\n\n    if (this.selected == null) {\n      this.radio_buttons.prop('checked', false);\n    } else {\n      this.radio_buttons.filter(\n          `#radio-${this.selected}`\n      ).prop('checked', true);\n    }\n\n    this.radio_buttons.change(() => {\n      var checked_radio = this.radio_buttons.filter(':checked');\n      var old_selected_value = this.selected;\n      if (checked_radio.length == 0) {\n        this.selected = null;\n      } else {\n        this.selected = checked_radio.val() == 'true';\n      }\n      if (this.selected != old_selected_value) {\n        this.send_filter_changed();\n      }\n    });\n  }\n\n  is_active() {\n    return this.selected != null;\n  }\n\n  reset_filter() {\n    this.radio_buttons.prop('checked', false);\n    this.selected = null;\n    this.send_filter_changed();\n  }\n\n  get_filter_info() {\n    return {\n      \"field\": this.field,\n      \"type\": \"boolean\",\n      \"selected\": this.selected\n    };\n  }\n}\n\nmodule.exports = {'BooleanFilter': BooleanFilter};\n","var $ = require('jquery');\nvar filter_base = require('./qgrid.filterbase.js');\n\nclass DateFilter extends filter_base.FilterBase {\n\n  get_filter_html() {\n    return `\n      <div class='date-range-filter grid-filter qgrid-dropdown-menu'>\n        <h3 class='qgrid-popover-title'>\n          <div class='dropdown-title'>Filter by ${this.field}</div>\n          <i class='fa fa-times icon-remove close-button'/>\n        </h3>\n        <div class='dropdown-body'>\n          <input class='datepicker ignore start-date'/>\n          <span class='to'>to</span>\n          <input class='datepicker ignore end-date'/>\n        </div>\n        <div class='dropdown-footer'>\n          <a class='reset-link' href='#'>Reset</a>\n        </div>\n      </div>\n    `;\n  }\n\n  update_min_max(col_info, has_active_filter) {\n    this.min_value = col_info.filter_min;\n    this.max_value = col_info.filter_max;\n\n    var filter_info = col_info.filter_info;\n    if (filter_info) {\n      this.filter_start_date = filter_info.min || this.min_value;\n      this.filter_end_date = filter_info.max || this.max_value;\n    } else {\n      this.filter_start_date = this.min_value;\n      this.filter_end_date = this.max_value;\n    }\n\n    this.has_multiple_values = this.min_value != this.max_value;\n    this.show_filter();\n    if (has_active_filter) {\n      this.update_filter_button_disabled();\n    }\n  }\n\n  reset_filter() {\n    this.start_date_control.datepicker(\"setDate\", this.min_date);\n    this.end_date_control.datepicker(\"setDate\", this.max_date);\n\n    this.start_date_control.datepicker(\"option\", \"maxDate\", this.max_date);\n    this.end_date_control.datepicker(\"option\", \"minDate\", this.min_date);\n\n    this.filter_start_date = null;\n    this.filter_end_date = null;\n    this.send_filter_changed();\n  }\n\n  initialize_controls() {\n    super.initialize_controls();\n    this.min_date = new Date(this.min_value);\n    this.max_date = new Date(this.max_value);\n\n    this.start_date_control = this.filter_elem.find(\".start-date\");\n    this.end_date_control = this.filter_elem.find(\".end-date\");\n\n    var date_options = {\n      \"dayNamesMin\": ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n      \"prevText\": \"\",\n      \"nextText\": \"\",\n      minDate: this.min_date,\n      maxDate: this.max_date,\n      beforeShow: (input, inst) => {\n        // align the datepicker with the right edge of the input it drops down from\n        var clicked_elem = $(inst);\n        clicked_elem.closest(\".qgrid-dropdown-menu\").addClass(\"calendar-open\");\n\n        var widget = clicked_elem.datepicker('widget');\n        widget.css('margin-left', $(input).outerWidth() - widget.outerWidth());\n        widget.addClass(\"stay-open-on-click filter-child-elem\");\n      },\n      onSelect: (dateText, instance) => {\n        // pull the values from the datepickers\n        var start_date_string = this.start_date_control.val();\n        var end_date_string = this.end_date_control.val();\n\n        var start_date = new Date(start_date_string);\n        var end_date = new Date(end_date_string);\n\n        start_date = Date.UTC(start_date.getUTCFullYear(), start_date.getUTCMonth(), start_date.getUTCDate());\n        end_date = Date.UTC(end_date.getUTCFullYear(), end_date.getUTCMonth(), end_date.getUTCDate());\n        end_date += (1000 * 60 * 60 * 24) - 1;\n\n        this.filter_start_date = start_date;\n        this.filter_end_date = end_date;\n\n        this.send_filter_changed();\n\n        var datepicker = $(instance.input);\n        setTimeout((function () {\n          datepicker.blur();\n        }), 100);\n\n        if (datepicker.hasClass(\"start-date\")) {\n          // update the end date's min\n          this.end_date_control.datepicker(\"option\", \"minDate\", start_date);\n        }\n        if (datepicker.hasClass(\"end-date\")) {\n          // update the start date's max\n          this.start_date_control.datepicker(\"option\", \"maxDate\", new Date(end_date_string));\n        }\n      }\n    };\n\n    this.filter_elem.find(\".datepicker\").datepicker(date_options);\n\n    if (this.filter_start_date != null){\n      this.start_date_control.datepicker(\"setDate\", this.get_utc_date(this.filter_start_date));\n    } else {\n      this.start_date_control.datepicker(\"setDate\", this.min_date);\n    }\n\n    if (this.filter_end_date != null){\n      this.end_date_control.datepicker(\"setDate\", this.get_utc_date(this.filter_end_date));\n    } else {\n      this.end_date_control.datepicker(\"setDate\", this.max_date);\n    }\n  }\n\n  get_utc_date(date_ms) {\n    var date = new Date(date_ms);\n    return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  }\n\n  get_filter_info() {\n    return {\n      \"field\": this.field,\n      \"type\": \"date\",\n      \"min\": this.filter_start_date,\n      \"max\": this.filter_end_date\n    };\n  }\n\n  is_active() {\n    return this.filter_start_date || this.filter_end_date;\n  }\n}\n\nmodule.exports = {'DateFilter': DateFilter};\n","/**\n * Input handlers\n *\n * Adapted from https://github.com/mleibman/SlickGrid/blob/master/slick.editors.js\n * MIT License, Copyright (c) 2010 Michael Leibman\n */\nvar $ = require('jquery');\nrequire('slickgrid-qgrid/slick.editors.js');\n\nclass IndexEditor {\n  constructor(args){\n    this.column_info = args.column;\n    this.$cell = $(args.container);\n    this.$cell.attr('title',\n      'Editing index columns is not supported');\n    this.$cell.tooltip();\n    this.$cell.tooltip('enable');\n    this.$cell.tooltip(\"open\");\n    // automatically hide it after 4 seconds\n    setTimeout((event, ui) => {\n      this.$cell.tooltip('destroy');\n      args.cancelChanges();\n    }, 3000);\n  }\n\n  destroy() {}\n\n  focus() {}\n\n  loadValue(item) {\n    this.$cell.text(\n        this.column_info.formatter(\n            null, null, item[this.column_info.field], this.column_info, null\n        )\n    );\n  }\n\n  serializeValue() {}\n\n  applyValue(item, state) {}\n\n  isValueChanged() {\n    return false;\n  }\n\n  validate() {\n    return {\n      valid: true,\n      msg: null\n    };\n  }\n}\n\n//  http://stackoverflow.com/a/22118349\nclass SelectEditor {\n  constructor(args) {\n    this.column_info = args.column;\n    this.options = [];\n    if (this.column_info.editorOptions.options) {\n      this.options = this.column_info.editorOptions.options;\n    } else {\n      this.options = [\"yes\", \"no\"];\n    }\n    \n    var option_str = \"\";\n\n    this.elem = $(\"<SELECT tabIndex='0' class='editor-select'>\");\n\n    for (var i in this.options) {\n      var opt = $.trim(this.options[i]); // remove any white space including spaces after comma\n      var opt_elem = $(\"<OPTION>\");\n      opt_elem.val(opt);\n      opt_elem.text(opt);\n      opt_elem.appendTo(this.elem);\n    }\n\n    this.elem.appendTo(args.container);\n    this.elem.focus();\n  }\n\n  destroy() {\n    this.elem.remove();\n  }\n\n  focus() {\n    this.elem.focus();\n  }\n\n  loadValue(item) {\n    this.defaultValue = item[this.column_info.field];\n    this.elem.val(this.defaultValue);\n  }\n\n  serializeValue() {\n    if (this.options[0] == \"yes\") {\n      return (this.elem.val() == \"yes\");\n    } else {\n      return this.elem.val();\n    }\n  }\n\n  applyValue(item, state) {\n    item[this.column_info.field] = state;\n  }\n\n  isValueChanged() {\n    return (this.elem.val() != this.defaultValue);\n  }\n\n  validate() {\n    return {\n      valid: true,\n      msg: null\n    };\n  }\n}\n\n/**\n * Validator for numeric cells.\n */\nvar validateNumber = (value) => {\n  if (isNaN(value)) {\n    return {\n      valid: false,\n      msg: \"Please enter a valid integer\"\n    };\n  }\n  return {\n    valid: true,\n    msg: null\n  };\n};\n\nmodule.exports = {\n  'validateNumber': validateNumber,\n  'SelectEditor': SelectEditor,\n  'IndexEditor': IndexEditor\n};\n","var $ = require('jquery');\n\nclass FilterBase {\n  constructor(field, column_type, qgrid) {\n    this.field = field;\n    this.column_type = column_type;\n    this.qgrid = qgrid;\n    this.widget_model = qgrid.model;\n    if (this.widget_model) {\n      this.precision = this.widget_model.get('precision');\n    }\n    this.has_multiple_values = true;\n  }\n\n  handle_msg(msg) {\n    var column_info = msg.col_info;\n    if (msg.type == 'column_min_max_updated'){\n      this.update_min_max(column_info, this.qgrid.has_active_filter());\n    }\n  }\n\n  update_min_max(column_info, has_active_filter) {\n    throw new Error(\"not implemented!\");\n  }\n\n  render_filter_button(column_header_elem, slick_grid) {\n    if (this.filter_btn)\n      this.filter_btn.off();\n\n    this.column_header_elem = column_header_elem;\n    this.slick_grid = slick_grid;\n    this.filter_btn = $(`\n      <div class='filter-button'>\n        <div class='fa fa-filter filter-icon'/>\n      </div>\n    `);\n    this.filter_icon = this.filter_btn.find('.filter-icon');\n    this.filter_btn.appendTo(this.column_header_elem);\n    this.filter_btn.click((e) => this.handle_filter_button_clicked(e));\n  }\n\n  create_filter_elem() {\n    this.filter_elem = $(this.get_filter_html());\n    this.initialize_controls();\n    return this.filter_elem;\n  }\n\n  create_error_msg() {\n    var error_html = `\n      <div class='filter-error-msg grid-filter'>\n        All values in the column are the same.  Nothing to filter.\n      </div>\n    `;\n    this.filter_elem = $(error_html);\n    this.initialize_controls();\n    this.disabled_tooltip_showing = true;\n  }\n\n  get_filter_html() {\n    throw new Error(\"not implemented!\");\n  }\n\n  // If all the values in this column are the same, the filters would accomplish nothing,\n  // so we gray out the filter button.  If the button is clicked we show a tooltip explaining\n  // why the filter is disabled.\n  update_filter_button_disabled() {\n    if (this.column_header_elem) {\n      if (this.has_multiple_values || this.is_active()) {\n        this.column_header_elem.removeClass(\"filter-button-disabled\");\n      } else {\n        this.column_header_elem.addClass(\"filter-button-disabled\");\n      }\n    }\n  }\n\n  is_active() {\n    throw new Error(\"not implemented!\");\n  }\n\n  handle_filter_button_clicked(e) {\n    if (this.filter_btn.hasClass('active')){\n      this.hide_filter();\n      e.stopPropagation();\n      return false;\n    }\n\n    this.filter_icon.removeClass('fa-filter');\n    this.filter_icon.addClass('fa-spinner fa-spin');\n    this.filter_btn.addClass('disabled');\n\n    var msg = {\n        'type': 'show_filter_dropdown',\n        'field': this.field,\n        'search_val': null\n    };\n    this.widget_model.send(msg);\n    return false;\n  }\n\n  show_filter() {\n    this.column_header_elem.addClass(\"active\");\n\n    this.prev_column_separator = this.column_header_elem.prev(\".slick-header-column\").find(\".slick-resizable-handle\");\n    this.prev_column_separator.addClass(\"active\");\n\n    this.filter_btn.removeClass('disabled');\n    this.filter_btn.addClass(\"active\");\n\n    this.filter_icon.removeClass('fa-spinner fa-spin');\n    this.filter_icon.addClass('fa-filter');\n\n    if (this.has_multiple_values || this.is_active()) {\n      this.create_filter_elem();\n    } else {\n      this.create_error_msg();\n    }\n\n    this.filter_elem.appendTo(this.column_header_elem.closest(\".q-grid-container\")).show();\n\n    // position the dropdown\n    var top = this.filter_btn.offset().top + this.filter_btn.height();\n    var left = this.filter_btn.offset().left;\n\n    var filter_width = this.filter_elem.width();\n    this.filter_elem.width(filter_width);\n    var elem_right = left + filter_width;\n\n    var qgrid_area = this.filter_elem.closest('.q-grid-container');\n    if (elem_right > qgrid_area.offset().left + qgrid_area.width()) {\n      left = (this.filter_btn.offset().left + this.filter_btn.width()) - filter_width;\n    }\n\n    this.filter_elem.offset({top: 0, left: 0});\n    this.filter_elem.offset({top: top, left: left});\n  }\n\n  hide_filter() {\n    if (!this.filter_elem)\n      return;\n    if (this.disabled_tooltip_showing) {\n      this.filter_elem.remove();\n      this.filter_elem = null;\n      this.disabled_tooltip_showing = false;\n    } else if (!this.filter_elem.hasClass(\"hidden\")) {\n      this.filter_elem.remove();\n      this.filter_elem = null;\n    }\n    this.filter_btn.removeClass(\"active\");\n    this.column_header_elem.removeClass(\"active\");\n    this.prev_column_separator.removeClass(\"active\");\n  }\n\n  initialize_controls() {\n    this.filter_elem.find(\"a.reset-link\").click(\n        (e) => this.reset_filter()\n    );\n    this.filter_elem.find(\"i.close-button\").click(\n        (e) => this.hide_filter()\n    );\n    $(document.body).bind(\"mousedown\",\n        (e) => this.handle_body_mouse_down(e)\n    );\n    $(document.body).bind(\"keyup\",\n        (e) => this.handle_body_key_up(e)\n    );\n  }\n\n  send_filter_changed() {\n    if (this.is_active()){\n      this.filter_btn.addClass(\"filter-active\");\n    } else {\n      this.filter_btn.removeClass(\"filter-active\");\n    }\n\n    var msg = {\n      'type': 'change_filter',\n      'field': this.field,\n      'filter_info': this.get_filter_info()\n    };\n    this.widget_model.send(msg);\n  }\n\n  handle_body_mouse_down(e) {\n    if (this.filter_elem && this.filter_elem[0] != e.target && !$.contains(this.filter_elem[0], e.target) &&\n        !$.contains(this.filter_btn[0], e.target) &&\n        $(e.target).closest(\".filter-child-elem\").length == 0) {\n      this.hide_filter();\n    }\n    return true;\n  }\n\n  handle_body_key_up(e) {\n    if (e.keyCode == 27) { // esc key\n      this.hide_filter();\n    }\n  }\n\n  reset_filter() {\n    throw new Error(\"not implemented!\");\n  }\n\n  get_filter_info() {\n    throw new Error(\"not implemented!\");\n  }\n}\n\nmodule.exports = {'FilterBase': FilterBase};\n","var filter_base = require('./qgrid.filterbase.js');\n\nclass SliderFilter extends filter_base.FilterBase {\n\n  get_filter_html() {\n    return `\n      <div class='numerical-filter grid-filter qgrid-dropdown-menu'>\n        <h3 class='qgrid-popover-title'>\n          <div class='dropdown-title'>Filter by ${this.field}</div>\n          <i class='fa fa-times icon-remove close-button'/>\n        </h3>\n        <div class='dropdown-body'>\n          <div class='slider-range'/>\n          <span class='slider-label'>\n            <span class='min-value'>0</span>\n            <span class='range-separator'>-</span>\n            <span class='max-value'>100</span>\n          </span>\n        </div>\n        <div class='dropdown-footer'>\n          <a class='reset-link' href='#'>Reset</a>\n        </div>\n      </div>\n    `;\n  }\n\n  initialize_controls() {\n    super.initialize_controls();\n    this.slider_elem = this.filter_elem.find(\".slider-range\");\n\n    var values_to_set = [\n      this.filter_value_min || this.min_value,\n      this.filter_value_max || this.max_value\n    ];\n\n    this.set_value(values_to_set[0], values_to_set[1]);\n\n    this.slider_elem.slider({\n      range: true,\n      min: this.min_value,\n      max: this.max_value,\n      values: values_to_set,\n      step: this.get_slider_step(),\n      slide: (event, ui) => {\n        if (this.slide_timeout) {\n          clearTimeout(this.slide_timeout);\n        }\n        this.slide_timeout = setTimeout(() => {\n          var slider_values = this.slider_elem.slider(\"option\", \"values\");\n          this.filter_value_min = slider_values[0];\n          this.filter_value_max = slider_values[1];\n          this.set_value(this.filter_value_min, this.filter_value_max);\n\n          if (this.filter_value_min == this.min_value) {\n            this.filter_value_min = null;\n          }\n\n          if (this.filter_value_max == this.max_value) {\n            this.filter_value_max = null;\n          }\n\n          this.send_filter_changed();\n          this.slide_timeout = null;\n        }, 100);\n      }\n    });\n  }\n\n  set_value(min_val, max_val) {\n    var min_val_rounded, max_val_rounded;\n    if (this.column_type == 'integer') {\n      min_val_rounded = min_val.toFixed(0);\n      max_val_rounded = max_val.toFixed(0);\n    } else {\n      min_val_rounded = min_val.toFixed(this.precision);\n      max_val_rounded = max_val.toFixed(this.precision);\n    }\n    this.filter_elem.find(\".min-value\").html(min_val_rounded);\n    this.filter_elem.find(\".max-value\").html(max_val_rounded);\n  }\n\n  get_slider_step() {\n    if (this.column_type == \"integer\") {\n      return 1;\n    } else {\n      return (this.max_value - this.min_value) / 200;\n    }\n  }\n\n  reset_filter() {\n    this.filter_value_min = null;\n    this.filter_value_max = null;\n    if (this.slider_elem) {\n      var step = this.get_slider_step();\n      this.slider_elem.slider({\n        min: this.min_value,\n        max: this.max_value,\n        values: [this.min_value, this.max_value],\n        step: step\n      });\n      this.set_value(this.min_value, this.max_value);\n    }\n    this.send_filter_changed();\n  }\n\n  is_active() {\n    return this.filter_value_min != null || this.filter_value_max != null;\n  }\n\n  update_min_max(col_info, has_active_filter) {\n    this.min_value = col_info.slider_min;\n    this.max_value = col_info.slider_max;\n\n    var filter_info = col_info.filter_info;\n    if (filter_info) {\n      this.filter_value_min = filter_info.min || this.min_value;\n      this.filter_value_max = filter_info.max || this.max_value;\n    } else {\n      this.filter_value_min = null;\n      this.filter_value_max = null;\n    }\n    this.has_multiple_values = this.min_value != this.max_value;\n\n    this.show_filter();\n\n    if (!has_active_filter) {\n      this.update_filter_button_disabled();\n    }\n  }\n\n  get_filter_info() {\n    return {\n      \"field\": this.field,\n      \"type\": \"slider\",\n      \"min\": this.filter_value_min,\n      \"max\": this.filter_value_max\n    };\n  }\n}\n\nmodule.exports = {'SliderFilter': SliderFilter};\n","var $ = require('jquery');\nvar _ = require('underscore');\nvar filter_base = require('./qgrid.filterbase.js');\n\nclass TextFilter extends filter_base.FilterBase {\n\n  get_filter_html() {\n    return `\n      <div class='text-filter grid-filter qgrid-dropdown-menu'>\n        <h3 class='qgrid-popover-title'>\n          <div class='dropdown-title'>Filter by ${this.field}</div>\n          <i class='fa fa-times icon-remove close-button'/>\n        </h3>\n        <div class='dropdown-body'>\n          <div class='input-area'>\n            <input class='search-input' type='text'/>\n          </div>\n          <div class='text-filter-grid'/>\n          <div class='no-results hidden'>No results found.</div>\n        </div>\n        <div class='dropdown-footer'>\n          <a class='select-all-link' href='#'>Select All</a>\n          <a class='reset-link' href='#'>Reset</a>\n        </div>\n      </div>\n    `;\n  }\n\n  handle_msg(msg) {\n    var column_info = msg.col_info;\n    if (msg.type == 'update_data_view_filter'){\n      this.update_data_view(column_info);\n    }\n    super.handle_msg(msg);\n  }\n\n  update_min_max(col_info, has_active_filter) {\n    this.values = col_info.values;\n    this.length = col_info.length;\n    this.value_range = col_info.value_range;\n    this.selected_rows = [];\n    for (var i = 0; i < col_info.selected_length; i++) {\n      this.selected_rows.push(i);\n    }\n    this.ignore_selection_changed = true;\n    this.show_filter();\n    this.ignore_selection_changed = false;\n  }\n\n  update_data_view(col_info) {\n    if (this.update_timeout) {\n      clearTimeout(this.update_timeout);\n    }\n\n    this.update_timeout = setTimeout(() => {\n      this.values = col_info.values;\n      this.length = col_info.length;\n      this.value_range = col_info.value_range;\n\n      if (this.length === 0) {\n        this.filter_elem.find('.no-results').removeClass('hidden');\n        this.filter_grid_elem.addClass('hidden');\n        return;\n      }\n\n      this.filter_elem.find('.no-results').addClass('hidden');\n      this.filter_grid_elem.removeClass('hidden');\n      this.ignore_selection_changed = true;\n      this.update_slick_grid_data();\n      this.filter_grid.setData(this.data_view);\n      this.selected_rows = [];\n      for (var i = 0; i < col_info.selected_length; i++) {\n        this.selected_rows.push(i);\n        this.row_selection_model.setSelectedRows(this.selected_rows);\n      }\n      this.filter_grid.render();\n      this.ignore_selection_changed = false;\n    }, 100);\n  }\n\n  update_slick_grid_data() {\n    this.grid_items = this.values.map(function (value, index) {\n      return {\n        id: value,\n        value: value\n      };\n    });\n\n    this.data_view = {\n      getLength: () => {\n        return this.length;\n      },\n      getItem: (i) => {\n        var default_row = {\n          id: 'row' + i,\n          value: ''\n        };\n        if (i >= this.value_range[0] && i < this.value_range[1]) {\n          return this.grid_items[i - this.value_range[0]] || default_row;\n        } else {\n          return default_row;\n        }\n      }\n    };\n  }\n\n  initialize_controls() {\n    super.initialize_controls();\n    this.filter_grid_elem = this.filter_elem.find(\".text-filter-grid\");\n    this.search_string = \"\";\n\n    this.update_slick_grid_data();\n\n    this.sort_comparer = (x, y) => {\n      var x_value = x.value;\n      var y_value = y.value;\n\n      // selected row should be sorted to the top\n      if (x.selected != y.selected) {\n        return x.selected ? -1 : 1;\n      }\n\n      return x_value > y_value ? 1 : -1;\n    };\n\n    var text_filter = (item, args) => {\n      if (this.search_string) {\n        if (item.value.toLowerCase().indexOf(this.search_string.toLowerCase()) == -1) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    var row_formatter = function (row, cell, value, columnDef, dataContext) {\n      return \"<span class='text-filter-value'>\" + dataContext.value + \"</span>\";\n    };\n\n    var checkboxSelector = new Slick.CheckboxSelectColumn({\n      cssClass: \"check-box-cell\"\n    });\n\n    var columns = [\n      checkboxSelector.getColumnDefinition(),\n      {\n        id: \"name\",\n        name: \"Name\",\n        field: \"name\",\n        formatter: row_formatter,\n        sortable: true\n      }];\n\n    var options = {\n      enableCellNavigation: true,\n      fullWidthRows: true,\n      syncColumnCellResize: true,\n      rowHeight: 32,\n      forceFitColumns: true,\n      enableColumnReorder: false\n    };\n\n    var max_height = options.rowHeight * 8;\n    // Subtract 110 from viewport height to account for the height of the header + search box + footer\n    // of the filter control.  This value can't be calculated dynamically because the filter control\n    // hasn't been shown yet.\n    var qgrid_viewport_height = this.column_header_elem.closest('.slick-header').siblings('.slick-viewport').height() - 115;\n    if (qgrid_viewport_height < max_height) {\n      max_height = qgrid_viewport_height;\n    }\n\n    var grid_height = max_height;\n    // totalRowHeight is how tall the grid would have to be to fit all of the rows in the dataframe.\n    var total_row_height = (this.grid_items.length) * options.rowHeight;\n\n    if (total_row_height <= max_height) {\n      grid_height = total_row_height;\n      this.filter_grid_elem.addClass('hide-scrollbar');\n    }\n    this.filter_grid_elem.height(grid_height);\n\n    this.filter_grid = new Slick.Grid(\n        this.filter_grid_elem, this.data_view, columns, options\n    );\n    this.filter_grid.registerPlugin(checkboxSelector);\n\n    this.row_selection_model = new Slick.RowSelectionModel({\n      selectActiveRow: false\n    });\n    this.row_selection_model.onSelectedRangesChanged.subscribe(\n        (e, args) => this.handle_selection_changed(e, args)\n    );\n\n    this.filter_grid.setSelectionModel(this.row_selection_model);\n    this.row_selection_model.setSelectedRows(this.selected_rows);\n\n    if (this.column_type != 'any') {\n      this.filter_grid.onViewportChanged.subscribe((e, args) => {\n        if (this.viewport_timeout) {\n          clearTimeout(this.viewport_timeout);\n        }\n        this.viewport_timeout = setTimeout(() => {\n          var vp = args.grid.getViewport();\n          var msg = {\n            'type': 'change_filter_viewport',\n            'field': this.field,\n            'top': vp.top,\n            'bottom': vp.bottom\n          };\n          this.widget_model.send(msg);\n          this.viewport_timeout = null;\n        }, 100);\n      });\n    }\n\n    this.filter_grid.render();\n\n    this.security_search = this.filter_elem.find(\".search-input\");\n    this.security_search.keyup((e) => this.handle_text_input_key_up(e));\n    this.security_search.click((e) => this.handle_text_input_click(e));\n\n    this.filter_grid.onClick.subscribe(\n        (e, args) => this.handle_grid_clicked(e, args)\n    );\n    this.filter_grid.onKeyDown.subscribe(\n        (e, args) => this.handle_grid_key_down(e, args)\n    );\n\n    this.filter_elem.find(\"a.select-all-link\").click((e) => {\n      this.ignore_selection_changed = true;\n      this.reset_filter();\n      this.filter_list = \"all\";\n      var all_row_indices = [];\n      for (var i = 0; i < this.length; i++) {\n        all_row_indices.push(i);\n      }\n      this.row_selection_model.setSelectedRows(all_row_indices);\n      this.ignore_selection_changed = false;\n      this.send_filter_changed();\n      return false;\n    });\n\n    setTimeout(() => {\n      this.filter_grid.setColumns(this.filter_grid.getColumns());\n      this.filter_grid.resizeCanvas();\n    }, 10);\n  }\n\n  toggle_row_selected(row_index) {\n    var old_selected_rows = this.row_selection_model.getSelectedRows();\n    // if the row is already selected, remove it from the selected rows array.\n    var selected_rows = old_selected_rows.filter(function (word) {\n      return word !== row_index;\n    });\n    // otherwise add it to the selected rows array so it gets selected\n    if (selected_rows.length == old_selected_rows.length) {\n      selected_rows.push(row_index);\n    }\n    this.row_selection_model.setSelectedRows(selected_rows);\n  }\n\n  handle_grid_clicked(e, args) {\n    this.toggle_row_selected(args.row);\n    var active_cell = this.filter_grid.getActiveCell();\n    if (!active_cell) {\n      e.stopImmediatePropagation();\n    }\n  }\n\n  handle_grid_key_down(e, args) {\n    var active_cell = this.filter_grid.getActiveCell();\n    if (active_cell) {\n      if (e.keyCode == 13) { // enter key\n        this.toggle_row_selected(active_cell.row);\n        return;\n      }\n\n      // focus on the search box for any key other than the up/down arrows\n      if (e.keyCode != 40 && e.keyCode != 38) {\n        this.focus_on_search_box();\n        return;\n      }\n\n      // also focus on the search box if we're at the top of the grid and this is the up arrow\n      else if (active_cell.row == 0 && e.keyCode == 38) {\n        this.focus_on_search_box();\n        e.preventDefault();\n        return;\n      }\n    }\n  }\n\n  focus_on_search_box() {\n    this.security_search.focus().val(this.search_string);\n    this.filter_grid.resetActiveCell();\n  }\n\n  handle_text_input_key_up(e) {\n    var old_search_string = this.search_string;\n    if (e.keyCode == 40) { // down arrow\n      this.filter_grid.focus();\n      this.filter_grid.setActiveCell(0, 0);\n      return;\n    }\n    if (e.keyCode == 13) { // enter key\n      if (this.security_grid.getDataLength() > 0) {\n        this.toggle_row_selected(0);\n        this.security_search.val(\"\");\n      }\n    }\n\n    this.search_string = this.security_search.val();\n    if (old_search_string != this.search_string) {\n      var msg = {\n        'type': 'show_filter_dropdown',\n        'field': this.field,\n        'search_val': this.search_string\n      };\n      this.widget_model.send(msg);\n    }\n  }\n\n  handle_text_input_click(e) {\n    this.filter_grid.resetActiveCell();\n  }\n\n  handle_selection_changed(e, args) {\n    if (this.ignore_selection_changed) {\n      return false;\n    }\n\n    var rows = this.row_selection_model.getSelectedRows();\n    rows = _.sortBy(rows, function (i) {\n      return i;\n    });\n    this.excluded_rows = [];\n    if (this.filter_list == 'all') {\n      var j = 0;\n      for (var i = 0; i < this.data_view.getLength(); i++) {\n        if (rows[j] == i) {\n          j += 1;\n          continue;\n        } else {\n          this.excluded_rows.push(i);\n        }\n      }\n    } else {\n      this.filter_list = rows.length > 0 ? rows : null;\n    }\n\n    this.send_filter_changed();\n  }\n\n  is_active() {\n    return this.filter_list != null;\n  }\n\n  reset_filter() {\n    this.ignore_selection_changed = true;\n    this.search_string = \"\";\n    this.excluded_rows = null;\n    this.security_search.val(\"\");\n    this.row_selection_model.setSelectedRows([]);\n    this.filter_list = null;\n    this.send_filter_changed();\n    var msg = {\n      'type': 'show_filter_dropdown',\n      'field': this.field,\n      'search_val': this.search_string\n    };\n    this.widget_model.send(msg);\n    this.ignore_selection_changed = false;\n  }\n\n  get_filter_info() {\n    return {\n      \"field\": this.field,\n      \"type\": \"text\",\n      \"selected\": this.filter_list,\n      \"excluded\": this.excluded_rows\n    };\n  }\n}\n\nmodule.exports = {'TextFilter': TextFilter};\n","var widgets = require('@jupyter-widgets/base');\nvar _ = require('underscore');\nvar moment = require('moment');\nwindow.$ = window.jQuery = require('jquery');\nvar date_filter = require('./qgrid.datefilter.js');\nvar slider_filter = require('./qgrid.sliderfilter.js');\nvar text_filter = require('./qgrid.textfilter.js');\nvar boolean_filter = require('./qgrid.booleanfilter.js');\nvar editors = require('./qgrid.editors.js');\nvar dialog = null;\n\n//try {\n//  dialog = require('base/js/dialog');\n//} catch (e) {\n//  console.warn(\"Qgrid was unable to load base/js/dialog. \" +\n//               \"Full screen button won't be available\");\n//}\n\nvar jquery_ui = require('jquery-ui-dist/jquery-ui.min.js');\n\nrequire('slickgrid-qgrid/slick.core.js');\nrequire('slickgrid-qgrid/lib/jquery.event.drag-2.3.0.js');\nrequire('slickgrid-qgrid/plugins/slick.rowselectionmodel.js');\nrequire('slickgrid-qgrid/plugins/slick.checkboxselectcolumn.js');\nrequire('slickgrid-qgrid/slick.dataview.js');\nrequire('slickgrid-qgrid/slick.grid.js');\nrequire('slickgrid-qgrid/slick.editors.js');\nrequire('style-loader!slickgrid-qgrid/slick.grid.css');\nrequire('style-loader!slickgrid-qgrid/slick-default-theme.css');\nrequire('style-loader!jquery-ui-dist/jquery-ui.min.css');\nrequire('style-loader!./qgrid.css');\n\n// Model for the qgrid widget\nclass QgridModel extends widgets.DOMWidgetModel {\n  defaults() {\n    return _.extend(widgets.DOMWidgetModel.prototype.defaults(), {\n      _model_name : 'QgridModel',\n      _view_name : 'QgridView',\n      _model_module : 'qgrid',\n      _view_module : 'qgrid',\n      _model_module_version : '^1.1.3',\n      _view_module_version : '^1.1.3',\n      _df_json: '',\n      _columns: {}\n    });\n  }\n}\n\n\n// View for the qgrid widget\nclass QgridView extends widgets.DOMWidgetView {\n  render() {\n    // subscribe to incoming messages from the QGridWidget\n    this.model.on('msg:custom', this.handle_msg, this);\n    this.initialize_qgrid();\n  }\n\n  /**\n   * Main entry point for drawing the widget,\n   * including toolbar buttons if necessary.\n   */\n  initialize_qgrid() {\n    this.$el.empty();\n    if (!this.$el.hasClass('q-grid-container')){\n      this.$el.addClass('q-grid-container');\n    }\n    this.initialize_toolbar();\n    this.initialize_slick_grid();\n  }\n\n  initialize_toolbar() {\n    if (!this.model.get('show_toolbar')){\n      this.$el.removeClass('show-toolbar');\n    } else {\n      this.$el.addClass('show-toolbar');\n    }\n\n    if (this.toolbar){\n      return;\n    }\n\n    this.toolbar = $(\"<div class='q-grid-toolbar'>\").appendTo(this.$el);\n\n    let append_btn = (btn_info) => {\n      return $(`\n        <button\n        class='btn btn-default'\n        data-loading-text='${btn_info.loading_text}'\n        data-event-type='${btn_info.event_type}'\n        data-btn-text='${btn_info.text}'>\n            ${btn_info.text}\n        </button>\n      `).appendTo(this.toolbar);\n    };\n\n    append_btn({\n      loading_text: 'Adding...',\n      event_type: 'add_row',\n      text: 'Add Row'\n    });\n\n    append_btn({\n      loading_text: 'Removing...',\n      event_type: 'remove_row',\n      text: 'Remove Row'\n    });\n\n    this.buttons = this.toolbar.find('.btn');\n    this.buttons.attr('title',\n        'Not available while there is an active filter');\n    this.buttons.tooltip();\n    this.buttons.tooltip({\n      show: {delay: 300}\n    });\n    this.buttons.tooltip({\n      hide: {delay: 100, 'duration': 0}\n    });\n    this.buttons.tooltip('disable');\n\n    this.full_screen_btn = null;\n    if (dialog) {\n      this.full_screen_modal = $('body').find('.qgrid-modal');\n      if (this.full_screen_modal.length == 0) {\n        this.full_screen_modal = $(`\n          <div class=\"modal qgrid-modal\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-body\"></div>\n              </div>\n            </div>\n          </div>\n        `).appendTo($('body'));\n      }\n      this.full_screen_btn = $(`\n        <button\n          class='btn btn-default fa fa-arrows-alt full-screen-btn'/>\n      `).appendTo(this.toolbar);\n      this.close_modal_btn = $(`\n        <button\n          class='btn btn-default fa fa-times close-modal-btn'\n          data-dismiss=\"modal\"/>\n      `).appendTo(this.toolbar);\n\n    }\n    this.bind_toolbar_events();\n  }\n\n  bind_toolbar_events() {\n    this.buttons.off('click');\n    this.buttons.click((e) => {\n      let clicked = $(e.target);\n      if (clicked.hasClass('disabled')){\n        return;\n      }\n      if (this.in_progress_btn){\n        alert(`\n          Adding/removing row is not available yet because the\n          previous operation is still in progress.\n        `);\n      }\n      this.in_progress_btn = clicked;\n      clicked.text(clicked.attr('data-loading-text'));\n      clicked.addClass('disabled');\n      this.send({'type': clicked.attr('data-event-type')});\n    });\n    if (!this.full_screen_btn) {\n      return;\n    }\n    this.full_screen_btn.off('click');\n    this.full_screen_btn.click((e) => {\n      this.$el_wrapper = this.$el.parent();\n      this.$el_wrapper.height(this.$el_wrapper.height());\n      this.$el.detach();\n      var modal_options = {\n        body: this.$el[0],\n        show: false\n      };\n      if (IPython && IPython.keyboard_manager) {\n        modal_options.keyboard_manager = IPython.keyboard_manager;\n      }\n      var qgrid_modal = dialog.modal(modal_options);\n\n      qgrid_modal.removeClass('fade');\n      qgrid_modal.addClass('qgrid-modal');\n      qgrid_modal.on('shown.bs.modal', (e) => {\n        this.slick_grid.resizeCanvas();\n      });\n      qgrid_modal.on('hidden.bs.modal', (e) => {\n        this.$el.detach();\n        this.$el_wrapper.height('auto');\n        this.$el_wrapper.append(this.$el);\n        this.update_size();\n        this.slick_grid.bindAllEvents();\n        this.bind_toolbar_events();\n      });\n      qgrid_modal.modal('show');\n    });\n  }\n\n  /**\n   * Create the grid portion of the widget, which is an instance of\n   * SlickGrid, plus automatically created filter controls based on the\n   * type of data in the columns of the DataFrame provided by the user.\n   */\n  initialize_slick_grid() {\n\n    if (!this.grid_elem) {\n      this.grid_elem = $(\"<div class='q-grid'>\").appendTo(this.$el);\n    }\n\n    // create the table\n    var df_json = JSON.parse(this.model.get('_df_json'));\n    var columns = this.model.get('_columns');\n    this.data_view = this.create_data_view(df_json.data);\n    this.grid_options = this.model.get('grid_options');\n    this.index_col_name = this.model.get(\"_index_col_name\");\n    this.row_styles = this.model.get(\"_row_styles\");\n\n    this.columns = [];\n    this.index_columns = [];\n    this.filters = {};\n    this.filter_list = [];\n    this.date_formats = {};\n    this.last_vp = null;\n    this.sort_in_progress = false;\n    this.sort_indicator = null;\n    this.resizing_column = false;\n    this.ignore_selection_changed = false;\n    this.vp_response_expected = false;\n    this.next_viewport_msg = null;\n\n    var number_type_info = {\n      filter: slider_filter.SliderFilter,\n      validator: editors.validateNumber,\n      formatter: this.format_number\n    };\n\n    var self = this;\n\n    this.type_infos = {\n      integer: Object.assign(\n        { editor: Slick.Editors.Integer },\n        number_type_info\n      ),\n      number: Object.assign(\n        { editor: Slick.Editors.Float },\n        number_type_info\n      ),\n      string: {\n        filter: text_filter.TextFilter,\n        editor: Slick.Editors.Text,\n        formatter: this.format_string\n      },\n      datetime: {\n        filter: date_filter.DateFilter,\n        editor: class DateEditor extends Slick.Editors.Date {\n          constructor(args) {\n            super(args);\n\n            this.loadValue = (item) => {\n              this.date_value = item[args.column.field];\n              var formatted_val = self.format_date(\n                  this.date_value, args.column.field\n              );\n              this.input = $(args.container).find('.editor-text');\n              this.input.val(formatted_val);\n              this.input[0].defaultValue = formatted_val;\n              this.input.select();\n              this.input.on(\"keydown.nav\", function (e) {\n                if (e.keyCode === $.ui.keyCode.LEFT || e.keyCode === $.ui.keyCode.RIGHT) {\n                  e.stopImmediatePropagation();\n                }\n              });\n            };\n\n            this.isValueChanged = () => {\n              return this.input.val() != this.date_value;\n            };\n\n            this.serializeValue = () => {\n              if (this.input.val() === \"\") {\n                  return null;\n              }\n              var parsed_date = moment.parseZone(\n                  this.input.val(), \"YYYY-MM-DD HH:mm:ss.SSS\"\n              );\n              return parsed_date.format(\"YYYY-MM-DDTHH:mm:ss.SSSZ\");\n            };\n          }\n        },\n        formatter: (row, cell, value, columnDef, dataContext) => {\n          if (value === null){\n            return \"NaT\";\n          }\n          return this.format_date(value, columnDef.name);\n        }\n      },\n      any: {\n        filter: text_filter.TextFilter,\n        editor: editors.SelectEditor,\n        formatter: this.format_string\n      },\n      interval: {\n        formatter: this.format_string\n      },\n      boolean: {\n        filter: boolean_filter.BooleanFilter,\n        editor: Slick.Editors.Checkbox,\n        formatter: (row, cell, value, columngDef, dataContext) => {\n          return value ? `<span class=\"fa fa-check\"/>` : \"\";\n        }\n      }\n    };\n\n    $.datepicker.setDefaults({\n      gotoCurrent: true,\n      dateFormat: $.datepicker.ISO_8601,\n      constrainInput: false,\n      \"prevText\": \"\",\n      \"nextText\": \"\"\n    });\n\n    var sorted_columns = Object.values(columns).sort(\n        (a, b) => a.position - b.position\n    );\n\n    for(let cur_column of sorted_columns){\n      if (cur_column.name == this.index_col_name){\n        continue;\n      }\n\n      var type_info = this.type_infos[cur_column.type] || {};\n\n      var slick_column = cur_column;\n\n      Object.assign(slick_column, type_info);\n\n      if (cur_column.type == 'any'){\n        slick_column.editorOptions = {\n          options: cur_column.constraints.enum\n        };\n      }\n\n      if (slick_column.filter) {\n        var cur_filter = new slick_column.filter(\n            slick_column.field,\n            cur_column.type,\n            this\n        );\n        this.filters[slick_column.id] = cur_filter;\n        this.filter_list.push(cur_filter);\n      }\n\n      if (cur_column.width == null){\n        delete slick_column.width;\n      }\n\n      if (cur_column.maxWidth == null){\n        delete slick_column.maxWidth;\n      }\n\n      // don't allow editing index columns\n      if (cur_column.is_index) {\n        slick_column.editor = editors.IndexEditor;\n        \n        if (cur_column.first_index){\n          slick_column.cssClass += ' first-idx-col';\n        }\n        if (cur_column.last_index){\n          slick_column.cssClass += ' last-idx-col';\n        }\n\n        slick_column.name = cur_column.index_display_text;\n        slick_column.level = cur_column.level;\n\n        if (this.grid_options.boldIndex) {\n            slick_column.cssClass += ' idx-col';\n        }\n\n        this.index_columns.push(slick_column);\n        continue;\n      }\n\n      if (cur_column.editable == false) {\n        slick_column.editor = null;\n      }\n\n      this.columns.push(slick_column);\n    }\n\n    if (this.index_columns.length > 0) {\n      this.columns = this.index_columns.concat(this.columns);\n    }\n\n    var row_count = 0;\n\n    // set window.slick_grid for easy troubleshooting in the js console\n    window.slick_grid = this.slick_grid = new Slick.Grid(\n      this.grid_elem,\n      this.data_view,\n      this.columns,\n      this.grid_options\n    );\n    this.grid_elem.data('slickgrid', this.slick_grid);\n\n    if (this.grid_options.forceFitColumns){\n      this.grid_elem.addClass('force-fit-columns');\n    }\n\n    if (this.grid_options.highlightSelectedCell) {\n      this.grid_elem.addClass('highlight-selected-cell');\n    }\n\n    // compare to false since we still want to show row\n    // selection if this option is excluded entirely\n    if (this.grid_options.highlightSelectedRow != false) {\n      this.grid_elem.addClass('highlight-selected-row');\n    }\n\n    setTimeout(() => {\n      this.slick_grid.init();\n      this.update_size();\n    }, 1);\n\n    this.slick_grid.setSelectionModel(new Slick.RowSelectionModel());\n    this.slick_grid.setCellCssStyles(\"grouping\", this.row_styles);\n    this.slick_grid.render();\n    \n    this.update_size();\n\n    var render_header_cell = (e, args) => {\n      var cur_filter = this.filters[args.column.id];\n        if (cur_filter) {\n          cur_filter.render_filter_button($(args.node), this.slick_grid);\n        }\n    };\n\n    if (this.grid_options.filterable != false) {\n      this.slick_grid.onHeaderCellRendered.subscribe(render_header_cell);\n    }\n\n    // Force the grid to re-render the column headers so the\n    // onHeaderCellRendered event is triggered.\n    this.slick_grid.setColumns(this.slick_grid.getColumns());\n\n    $(window).resize(() => {\n      this.slick_grid.resizeCanvas();\n    });\n\n    this.slick_grid.setSortColumns([]);\n\n    this.grid_header = this.$el.find('.slick-header-columns');\n    var handle_header_click = (e) => {\n      if (this.resizing_column) {\n        return;\n      }\n\n      if (this.sort_in_progress){\n        return;\n      }\n\n      var col_header = $(e.target).closest(\".slick-header-column\");\n      if (!col_header.length) {\n        return;\n      }\n\n      var column = col_header.data(\"column\");\n      if (column.sortable == false){\n        return;\n      }\n\n      this.sort_in_progress = true;\n\n      if (this.sorted_column == column){\n        this.sort_ascending = !this.sort_ascending;\n      } else {\n        this.sorted_column = column;\n        if ('defaultSortAsc' in column) {\n          this.sort_ascending = column.defaultSortAsc;\n        } else{\n          this.sort_ascending = true;\n        }\n      }\n\n      var all_classes = 'fa-sort-asc fa-sort-desc fa fa-spin fa-spinner';\n      var clicked_column_sort_indicator = col_header.find('.slick-sort-indicator');\n      if (clicked_column_sort_indicator.length == 0){\n        clicked_column_sort_indicator =\n            $(\"<span class='slick-sort-indicator'/>\").appendTo(col_header);\n      }\n\n      this.sort_indicator = clicked_column_sort_indicator;\n      this.sort_indicator.removeClass(all_classes);\n      this.grid_elem.find('.slick-sort-indicator').removeClass(all_classes);\n      this.sort_indicator.addClass(`fa fa-spinner fa-spin`);\n      var msg = {\n        'type': 'change_sort',\n        'sort_field': this.sorted_column.field,\n        'sort_ascending': this.sort_ascending\n      };\n      this.send(msg);\n    };\n\n    if (this.grid_options.sortable != false) {\n      this.grid_header.click(handle_header_click)\n    }\n\n    this.slick_grid.onViewportChanged.subscribe((e) => {\n      if (this.viewport_timeout){\n        clearTimeout(this.viewport_timeout);\n      }\n      this.viewport_timeout = setTimeout(() => {\n        this.last_vp = this.slick_grid.getViewport();\n        var cur_range = this.model.get('_viewport_range');\n\n        if (this.last_vp.top != cur_range[0] || this.last_vp.bottom != cur_range[1]) {\n          var msg = {\n            'type': 'change_viewport',\n            'top': this.last_vp.top,\n            'bottom': this.last_vp.bottom\n          };\n          if (this.vp_response_expected){\n            this.next_viewport_msg = msg\n          } else {\n            this.vp_response_expected = true;\n            this.send(msg);\n          }\n        }\n        this.viewport_timeout = null;\n      }, 100);\n    });\n\n    // set up callbacks\n    let editable_rows = this.model.get('_editable_rows');\n    if (editable_rows && Object.keys(editable_rows).length > 0) {\n      this.slick_grid.onBeforeEditCell.subscribe((e, args) => {\n        editable_rows = this.model.get('_editable_rows');\n        return editable_rows[args.item[this.index_col_name]]\n      });\n    }\n\n    this.slick_grid.onCellChange.subscribe((e, args) => {\n      var column = this.columns[args.cell].name;\n      var data_item = this.slick_grid.getDataItem(args.row);\n      var msg = {'row_index': data_item.row_index, 'column': column,\n                 'unfiltered_index': data_item[this.index_col_name],\n                 'value': args.item[column], 'type': 'edit_cell'};\n      this.send(msg);\n    });\n\n    this.slick_grid.onSelectedRowsChanged.subscribe((e, args) => {\n      if (!this.ignore_selection_changed) {\n        var msg = {'rows': args.rows, 'type': 'change_selection'};\n        this.send(msg);\n      }\n    });\n\n    setTimeout(() => {\n      this.$el.closest('.output_wrapper')\n          .find('.out_prompt_overlay,.output_collapsed').click(() => {\n        setTimeout(() => {\n          this.slick_grid.resizeCanvas();\n        }, 1);\n      });\n\n      this.resize_handles = this.grid_header.find('.slick-resizable-handle');\n      this.resize_handles.mousedown((e) => {\n        this.resizing_column = true;\n      });\n      $(document).mouseup(() => {\n        // wait for the column header click handler to run before\n        // setting the resizing_column flag back to false\n        setTimeout(() => {\n          this.resizing_column = false;\n        }, 1);\n      });\n    }, 1);\n  }\n\n  processPhosphorMessage(msg) {\n    super.processPhosphorMessage(msg)\n    switch (msg.type) {\n    case 'resize':\n    case 'after-show':\n      if (this.slick_grid){\n        this.slick_grid.resizeCanvas();\n      }\n      break;\n    }\n  }\n\n  has_active_filter() {\n    for (var i=0; i < this.filter_list.length; i++){\n      var cur_filter = this.filter_list[i];\n      if (cur_filter.is_active()){\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Main entry point for drawing the widget,\n   * including toolbar buttons if necessary.\n   */\n  create_data_view(df) {\n    let df_range = this.df_range = this.model.get(\"_df_range\");\n    let df_length = this.df_length = this.model.get(\"_row_count\");\n    return {\n      getLength: () => {\n        return df_length;\n      },\n      getItem: (i) => {\n        if (i >= df_range[0] && i < df_range[1]){\n          var row = df[i - df_range[0]] || {};\n          row.row_index = i;\n          return row;\n        } else {\n          return { row_index: i };\n        }\n      }\n    };\n  }\n\n  set_data_view(data_view) {\n    this.data_view = data_view;\n    this.slick_grid.setData(data_view);\n  }\n\n  format_date(date_string, col_name) {\n    if (!date_string) {\n      return \"\";\n    }\n    var parsed_date = moment.parseZone(date_string, \"YYYY-MM-DDTHH:mm:ss.SSSZ\");\n    var date_format = null;\n    if (parsed_date.millisecond() != 0){\n       date_format = `YYYY-MM-DD HH:mm:ss.SSS`;\n    } else if (parsed_date.second() != 0){\n      date_format = \"YYYY-MM-DD HH:mm:ss\";\n    } else if (parsed_date.hour() != 0 || parsed_date.minute() != 0) {\n      date_format = \"YYYY-MM-DD HH:mm\";\n    } else {\n      date_format = \"YYYY-MM-DD\";\n    }\n\n    if (col_name in this.date_formats){\n      var old_format = this.date_formats[col_name];\n      if (date_format.length > old_format.length){\n        this.date_formats[col_name] = date_format;\n        setTimeout(() => {\n          this.slick_grid.invalidateAllRows();\n          this.slick_grid.render();\n        }, 1);\n      } else {\n        date_format = this.date_formats[col_name];\n      }\n    } else {\n      this.date_formats[col_name] = date_format;\n    }\n\n    return parsed_date.format(date_format);\n  }\n\n  format_string(row, cell, value, columnDef, dataContext) {\n    return value;\n  }\n\n  format_number(row, cell, value, columnDef, dataContext) {\n    if (value === null){\n      return 'NaN';\n    }\n    return value;\n  }\n\n  /**\n   * Handle messages from the QGridWidget.\n   */\n  handle_msg(msg) {\n    if (msg.type === 'draw_table') {\n      this.initialize_slick_grid();\n    } else if (msg.type == 'show_error') {\n      alert(msg.error_msg);\n      if (msg.triggered_by == 'add_row' ||\n        msg.triggered_by == 'remove_row'){\n        this.reset_in_progress_button();\n      }\n    } else if (msg.type == 'update_data_view') {\n      if (this.buttons) {\n        if (this.has_active_filter()) {\n          this.buttons.addClass('disabled');\n          this.buttons.tooltip('enable');\n        } else if (this.buttons.hasClass('disabled')) {\n          this.buttons.removeClass('disabled');\n          this.buttons.tooltip('disable');\n        }\n      }\n      if (this.update_timeout) {\n        clearTimeout(this.update_timeout);\n      }\n      this.update_timeout = setTimeout(() => {\n        var df_json = JSON.parse(this.model.get('_df_json'));\n        this.row_styles = this.model.get(\"_row_styles\");\n        this.multi_index = this.model.get(\"_multi_index\");\n        var data_view = this.create_data_view(df_json.data);\n\n        if (msg.triggered_by === 'change_viewport') {\n          if (this.next_viewport_msg) {\n            this.send(this.next_viewport_msg);\n            this.next_viewport_msg = null;\n            return;\n          } else {\n            this.vp_response_expected = false;\n          }\n        }\n\n        if (msg.triggered_by == 'change_sort' && this.sort_indicator) {\n          var asc = this.model.get('_sort_ascending');\n          this.sort_indicator.removeClass(\n              'fa-spinner fa-spin fa-sort-asc fa-sort-desc'\n          );\n          var fa_class = asc ? 'fa-sort-asc' : 'fa-sort-desc';\n          this.sort_indicator.addClass(fa_class);\n          this.sort_in_progress = false;\n        }\n\n        let top_row = null;\n        if (msg.triggered_by === 'remove_row') {\n          top_row = this.slick_grid.getViewport().top;\n        }\n\n        this.set_data_view(data_view);\n\n        var skip_grouping = false;\n        if (this.multi_index) {\n          for (var i = 1; i < this.filter_list.length; i++) {\n            var cur_filter = this.filter_list[i];\n            if (cur_filter.is_active()) {\n              skip_grouping = true;\n            }\n          }\n        }\n\n        if (skip_grouping) {\n          this.slick_grid.removeCellCssStyles(\"grouping\");\n        } else {\n          this.slick_grid.setCellCssStyles(\"grouping\", this.row_styles);\n        }\n\n        this.slick_grid.render();\n\n        if ((msg.triggered_by == 'add_row' ||\n            msg.triggered_by == 'remove_row') && !this.has_active_filter()) {\n          this.update_size();\n        }\n        this.update_timeout = null;\n        this.reset_in_progress_button();\n        if (top_row) {\n          this.slick_grid.scrollRowIntoView(top_row);\n        } else if (msg.triggered_by === 'add_row') {\n          this.slick_grid.scrollRowIntoView(msg.scroll_to_row);\n          this.slick_grid.setSelectedRows([msg.scroll_to_row]);\n        } else if (msg.triggered_by === 'change_viewport' &&\n            this.last_vp.bottom >= this.df_length) {\n          this.slick_grid.scrollRowIntoView(this.last_vp.bottom);\n        }\n\n        var selected_rows = this.slick_grid.getSelectedRows().filter((row) => {\n          return row < Math.min(this.df_length, this.df_range[1]);\n        });\n        this.send({\n          'rows': selected_rows,\n          'type': 'change_selection'\n        });\n      }, 100);\n    } else if (msg.type == 'change_grid_option') {\n      var opt_name = msg.option_name;\n      var opt_val = msg.option_value;\n      if (this.slick_grid.getOptions()[opt_name] != opt_val) {\n        this.slick_grid.setOptions({[opt_name]: opt_val});\n        this.slick_grid.resizeCanvas();\n      }\n    } else if (msg.type == 'change_selection') {\n      this.ignore_selection_changed = true;\n      this.slick_grid.setSelectedRows(msg.rows);\n      if (msg.rows && msg.rows.length > 0) {\n        this.slick_grid.scrollRowIntoView(msg.rows[0]);\n      }\n      this.ignore_selection_changed = false;\n    } else if (msg.type == 'change_show_toolbar') {\n      this.initialize_toolbar();\n    } else if (msg.col_info) {\n      var filter = this.filters[msg.col_info.name];\n      filter.handle_msg(msg);\n    }\n  }\n\n  reset_in_progress_button() {\n    if (this.in_progress_btn){\n      this.in_progress_btn.removeClass('disabled');\n      this.in_progress_btn.text(\n        this.in_progress_btn.attr('data-btn-text')\n      );\n      this.in_progress_btn = null;\n    }\n  }\n\n  /**\n   * Update the size of the dataframe.\n   */\n  update_size() {\n    var row_height = this.grid_options.rowHeight;\n    var min_visible = 'minVisibleRows' in this.grid_options ?\n        this.grid_options.minVisibleRows : 8;\n    var max_visible = 'maxVisibleRows' in this.grid_options ?\n        this.grid_options.maxVisibleRows : 15;\n\n    var min_height = row_height * min_visible;\n    // add 2 to maxVisibleRows to account for the header row and padding\n    var max_height = 'height' in this.grid_options ? this.grid_options.height :\n      row_height * (max_visible + 2);\n    var grid_height = max_height;\n    var total_row_height = (this.data_view.getLength() + 1) * row_height + 1;\n    if (total_row_height <= max_height){\n      grid_height = Math.max(min_height, total_row_height);\n      this.grid_elem.addClass('hide-scrollbar');\n    } else {\n      this.grid_elem.removeClass('hide-scrollbar');\n    }\n    this.grid_elem.height(grid_height);\n    this.slick_grid.render();\n    this.slick_grid.resizeCanvas();\n  }\n}\n\nmodule.exports = {\n  QgridModel : QgridModel,\n  QgridView : QgridView\n};\n"],"names":[],"sourceRoot":""}